{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap 495f1c5b9156fa9ee821","webpack:///src/index.js","webpack:///src/Account.js","webpack:///src/request.js","webpack:///src/Config.js","webpack:///src/Error.js","webpack:///~/extendable-error-class/dist/index.es5.js","webpack:///src/Sessions.js","webpack:///src/Order.js","webpack:///src/Funding.js","webpack:///src/Reports.js","webpack:///src/Instrument.js","webpack:///src/User.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","_Account","_Error","_Funding","_Instrument","_Order","_Reports","_User","_Sessions","_Config","_request","ENVIRONMENTS","HOSTS","Account","Config","Error","Funding","Instrument","Order","Reports","User","Sessions","setup","request","data","_classCallCheck","Object","assign","type","arguments","length","undefined","getBlotter","userID","accountID","getPerformance","apply","concat","Array","prototype","slice","parentDetails","accountNo","accountType","create","options","getFundingMethods","startDate","endDate","getTransactions","getPlacedOrders","getStatements","getTaxDocuments","getTradeConfirms","fileKey","generateDownloadURL","getSubscription","extractIDs","addSubscription","updateSubscription","cancelSubscription","_request2","default","method","endpoint","sessionKey","get","then","_ref","body","orders","map","order","queryString","getFullYear","getMonth","getDate","_ref2","performance","_ref3","account","TYPES","PRACTICE","responseType","tranAmount","_ref4","_ref5","planID","paymentID","startsWith","_defineProperty","_ref7","changeSubscription","BLOTTER_TYPES","CASH","ORDERS","TRANSACTIONS","POSITIONS","ALL","STATUSES","PENDING","OPEN","OPEN_NO_NEW_TRADES","CLOSED","LIVE","_ref$method","_ref$addlHeaders","addlHeaders","_ref$host","host","API","headers","Accept","header","env","JSON","stringify","Promise","resolve","reject","httpImpl","statusCode","resHeaders","resBody","contentType","indexOf","parse","err","String","errorMessage","message","error","DriveWealthSessionError","DriveWealthError","appTypeID","appVersion","_ref$wlpID","wlpID","appsPartnerID","referralCode","APPS","REPORTS","UAT","_UAT","PROD","_PROD","_extendableErrorClass","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","ExtendableError","_this2","instance","Constructor","TypeError","self","ReferenceError","_inherits","subClass","superClass","constructor","value","enumerable","writable","configurable","setPrototypeOf","_extendableBuiltin2","name","captureStackTrace","stack","cls","ExtendableBuiltin","Reflect","construct","from","_keys","_mainUser","sessions","SEC_FEE_MAX","Number","POSITIVE_INFINITY","rejectionReason","ordRejReason","status","ordStatus","ordType","orderType","price","stopPrice","limitPrice","cancel","orderID","getAny","_ref3$order","instrument","side","qty","amountCash","comment","autoStop","_ref3$waitForFill","waitForFill","_ref3$fillRetryInterv","fillRetryInterval","_ref3$fillMaxRetries","fillMaxRetries","MARKET","instrumentID","orderQty","STOP","LIMIT","retries","checkStatus","getByID","isFilled","NEW","PARTIAL_FILL","setTimeout","code","_ref6","_ref6$waitForFill","_ref6$fillRetryInterv","_ref6$fillMaxRetries","SIDES","BUY","orderResults","ordersMap","reduce","acc","next","idx","referenceID","all","orderCurrent","shouldRetry","reference","thisStatus","commissionSchedule","isArray","total","totalFeesOnly","basketPrice","basketSchedule","schedule","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","scheduleItem","basketSize","return","byOrder","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","marketPrice","orderPrice","fractionalRate","baseRate","NEAREST","Math","round","CEIL","ceil","FLOOR","floor","shareAmountRounding","max","baseShares","excessRate","secFee","tafFee","passThroughFees","SELL","min","orderTotal","commission","fees","sec","taf","multipleOrderDelta","FILL","CANCELED","REJECTED","language","minAmount","maxAmount","amount","_ref$filters","filters","country","currency","allowed","sort","x","y","depositID","_ref8","ALLOWED_TYPES","DEPOSIT","WITHDRAW","DEPOSIT_AND_WITHDRAW","DEPOSIT_FREQUENCIES","BIWEEKLY","MONTHLY_FIRST","MONTHLY_MIDDLE","QUARTERLY","toISOString","transaction","url","getQuote","symbol","compression","getChartData","symbols","join","includeFundamentals","tradeStatus","criteria","sym","obj","split","rawQuote","parsedQuote","bid","ask","timeParams","replace","TRADE_STATUSES","INACTIVE","ACTIVE","CHART_COMPRESSIONS","DAY","MINUTE_1","MINUTE_5","MINUTE_30","HOUR","WEEK","fullName","firstName","lastName","getListForUserID","key","getSettings","setSetting","unsetSetting","logout","getByUserID","update","email","emailAddress","file","uploadDocument","getCreditCards","cardToken","addCreditCard","cardID","removeCreditCard","formattedData","setting","remove","username","password","languageID","osType","osVersion","scrRes","ipAddress","save","rejection","_ref6$referralCode","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","loginAutomatically","emailAddress1","login","addressLine1","addressLine2","city","countryID","phoneHome","phoneWork","phone","stateProvince","zipPostalCode","phoneMobile","FormData","append","Content-Type","_ref9","_ref10","passwordResetID","APPROVED","REVOKED","DOCUMENT_TYPES","PHOTO_ID","PROOF_OF_ADDRESS","PHOTO_ID_WITH_PROOF_OF_ADDRESS"],"mappings":"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","file":"drivewealth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drivewealth\"] = factory();\n\telse\n\t\troot[\"drivewealth\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 495f1c5b9156fa9ee821","import Account from \"./Account\";\nimport Error from \"./Error\";\nimport Funding from \"./Funding\";\nimport Instrument from \"./Instrument\";\nimport Order from \"./Order\";\nimport Reports from \"./Reports\";\nimport User from \"./User\";\nimport Sessions from \"./Sessions\";\nimport { Config, setup, ENVIRONMENTS, HOSTS } from \"./Config\";\nimport request from \"./request\";\n\nexport default {\n\tENVIRONMENTS,\n\tHOSTS,\n\n\tAccount,\n\tConfig,\n\tError,\n\tFunding,\n\tInstrument,\n\tOrder,\n\tReports,\n\tUser,\n\tSessions,\n\n\tsetup,\n\trequest,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* @flow */\nimport request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport Order from \"./Order\";\nimport Funding from \"./Funding\";\nimport Reports from \"./Reports\";\n\nimport type { OrderParentDetails } from \"./Order\";\n\nexport type CommissionSchedule = {\n\tbaseRate: number,\n\tbaseShares: number,\n\texcessRate: number,\n\tfractionalRate: number,\n\tshareAmountRounding: number,\n\tsubscription: boolean,\n\tbasketSchedule: {\n\t\tbaseShares: number,\n\t\texcessRate: number,\n\t\tschedule: Array<{\n\t\t\tbasketSize: number,\n\t\t\tbasketPrice: number,\n\t\t}>,\n\t},\n\tpassThroughFees: boolean,\n};\n\n/**\n * @class Account\n * @description An account belonging to a User. Use the constructor if you have a flat JSON object that you would like to access instance methods on.\n * @param {object} data - See response at http://developer.drivewealth.com/docs/accounts_get\n */\nexport default class Account {\n\taccountID: string;\n\taccountNo: string;\n\tuserID: string;\n\taccountType: string;\n\tcurrencyID: string;\n\tibID: string;\n\tmargin: string;\n\tnickname: string;\n\topenedWhen: string;\n\tpatternDayTrades: string;\n\tstatus: string;\n\ttradingType: string;\n\taccountMgmtType: string;\n\tcommissionSchedule: CommissionSchedule;\n\n\tconstructor(data: Object) {\n\t\tObject.assign(this, data);\n\t}\n\n\t/**\n\t * @name BLOTTER_TYPES\n\t * @memberof Account\n\t * @constant\n\t * @property {string} CASH\n\t * @property {string} ORDERS\n\t * @property {string} TRANSACTIONS\n\t * @property {string} POSITIONS\n\t * @property {string} ALL\n\t */\n\tstatic BLOTTER_TYPES: {[type: string]: ?string} = {\n\t\tCASH: \"cash\",\n\t\tORDERS: \"orders\",\n\t\tTRANSACTIONS: \"transactions\",\n\t\tPOSITIONS: \"positions\",\n\t\tALL: null,\n\t};\n\n\t/**\n\t * @name STATUSES\n\t * @memberof Account\n\t * @constant\n\t * @property {number} PENDING\n\t * @property {number} OPEN\n\t * @property {number} OPEN_NO_NEW_TRADES\n\t * @property {number} CLOSED\n\t */\n\tstatic STATUSES: {[status: string]: number} = {\n\t\tPENDING: 1,\n\t\tOPEN: 2,\n\t\tOPEN_NO_NEW_TRADES: 3,\n\t\tCLOSED: 9,\n\t};\n\n\t/**\n\t * @name TYPES\n\t * @memberof Account\n\t * @constant\n\t * @property {number} PRACTICE\n\t * @property {number} LIVE\n\t */\n\tstatic TYPES: {[type: string]: number} = {\n\t\tPRACTICE: 1,\n\t\tLIVE: 2,\n\t};\n\n\t/**\n\t * @instance\n\t */\n\tgetBlotter(type: ?string = null): Promise<Object> {\n\t\treturn Account.getBlotter(this.userID, this.accountID, type);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getBlotter(userID: string, accountID: string, type: ?string = null): Promise<Object> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/accountSummary/`\n\t\t\t\t+ `${accountID}${type ? \"/\" + type : \"\"}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => {\n\t\t\tif (body.orders) {\n\t\t\t\tbody.orders = body.orders.map((order) => new Order(order));\n\t\t\t}\n\t\t\treturn type ? body[type] : body;\n\t\t});\n\t}\n\n\t/**\n\t * @param {Date} startDate\n\t * @param {Date} endDate\n\t */\n\t/**\n\t  * @param {string} period\n\t  */\n\t/**\n\t  * @description Get today's performance\n\t  */\n\tgetPerformance(): Promise<Object> {\n\t\treturn Account.getPerformance(this.userID, this.accountID, ...arguments);\n\t}\n\n\t/**\n\t * @param {Date} startDate\n\t * @param {Date} endDate\n\t */\n\t/**\n\t  * @param {string} period\n\t  */\n\t/**\n\t  * @description Get today's performance\n\t  */\n\tstatic getPerformance(userID: string, accountID: string): Promise<Object> {\n\t\tlet queryString = \"\";\n\t\tif (arguments.length === 4) {\n\t\t\tconst startDate = arguments[2];\n\t\t\tconst endDate = arguments[3];\n\t\t\tqueryString += \"/dateRange?\";\n\t\t\tqueryString += `startDate=${startDate.getFullYear()}${(\"0\" + (startDate.getMonth() + 1)).slice(-2)}${(\"0\" + startDate.getDate()).slice(-2)}`;\n\t\t\tqueryString += `&endDate=${endDate.getFullYear()}${(\"0\" + (endDate.getMonth() + 1)).slice(-2)}${(\"0\" + endDate.getDate()).slice(-2)}`;\n\t\t} else if (arguments.length === 3) {\n\t\t\tqueryString += `/history?period=${arguments[2]}`;\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/accountPerformance/${accountID}${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.performance);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tplaceOrder(type: string, data: Object): Promise<string | Object> {\n\t\tconst parentDetails: OrderParentDetails = {\n\t\t\taccountID: this.accountID,\n\t\t\taccountNo: this.accountNo,\n\t\t\taccountType: this.accountType,\n\t\t\tuserID: this.userID,\n\t\t};\n\n\t\treturn Order.create(type, parentDetails, data);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetFundingMethods(options: Object = {}): Promise<Array<Object>> {\n\t\toptions.userID = this.userID;\n\t\toptions.accountID = this.accountID;\n\t\treturn Funding.getFundingMethods(options);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetTransactions(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getTransactions(this.userID, this.accountNo, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetPlacedOrders(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getPlacedOrders(this.userID, this.accountNo, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetStatements(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getStatements(this.userID, this.accountID, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetTaxDocuments(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getTaxDocuments(this.userID, this.accountID, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetTradeConfirms(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getTradeConfirms(this.userID, this.accountID, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgenerateDownloadURL(fileKey: string): Promise<string> {\n\t\treturn Reports.generateDownloadURL(this.userID, this.accountID, fileKey);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getListForUserID(userID: string): Promise<Array<Account>> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/accounts`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.map(account => new Account(account)));\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic create(userID: string, type: string, data: Object) {\n\t\tif (type === Account.TYPES.PRACTICE) {\n\t\t\tdata = {\n\t\t\t\tuserID,\n\t\t\t\tresponseType: \"full\",\n\t\t\t\ttranAmount: data,\n\t\t\t};\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: type === Account.TYPES.PRACTICE\n\t\t\t\t? \"/signups/practice\"\n\t\t\t\t: \"/signups/live\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: data,\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @param {string} method\n\t * @param {object} options\n\t */\n\tstatic changeSubscription(method: string, {\n\t\tuserID,\n\t\taccountID,\n\t\tplanID,\n\t\tpaymentID,\n\t}: {\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tplanID: string,\n\t\tpaymentID: string,\n\t}): Promise<Object> {\n\t\treturn request({\n\t\t\tmethod,\n\t\t\tendpoint: `/users/${userID}/accounts/${accountID}/subscriptions`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: !method.startsWith(\"P\") ? undefined : {\n\t\t\t\tplanID,\n\t\t\t\t[paymentID.startsWith(\"card\") ? \"cardID\" : \"bankAccountID\"]: paymentID,\n\t\t\t},\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getSubscription(options: Object): Promise<Object> {\n\t\treturn Account.changeSubscription(\"GET\", options);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic addSubscription(options: Object): Promise<Object> {\n\t\treturn Account.changeSubscription(\"POST\", options);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic updateSubscription(options: Object): Promise<Object> {\n\t\treturn Account.changeSubscription(\"PUT\", options);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic cancelSubscription(options: Object): Promise<Object> {\n\t\treturn Account.changeSubscription(\"DELETE\", options);\n\t}\n\n\textractIDs(options?: Object): Object {\n\t\treturn Object.assign({}, options, {\n\t\t\tuserID: this.userID,\n\t\t\taccountID: this.accountID,\n\t\t});\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetSubscription(): Promise<Object> {\n\t\treturn Account.getSubscription(this.extractIDs());\n\t}\n\n\t/**\n\t * @instance\n\t */\n\taddSubscription(options: Object): Promise<Object> {\n\t\treturn Account.addSubscription(this.extractIDs(options));\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tupdateSubscription(options: Object): Promise<Object> {\n\t\treturn Account.updateSubscription(this.extractIDs(options));\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tcancelSubscription(): Promise<Object> {\n\t\treturn Account.cancelSubscription(this.extractIDs());\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Account.js","/* @flow */\nimport { Config, HOSTS } from \"./Config\";\nimport { DriveWealthError, DriveWealthSessionError } from \"./Error\";\n\n/**\n * @function request\n * @description Normally, it is unnecessary to use this function and this is for internal use only. Call request() if you need to make a custom API call that is not covered by another function.\n * @param {object} options\n * @param {string} options.method\n * @param {string} options.endpoint\n * @param {string} options.sessionKey\n * @param {string} options.body\n * @param {Object.<string, string>} options.addlHeaders\n * @param {string} options.host - One of Config.HOSTS\n * @returns {Promise.<{body: string, statusCode: number, headers: Object<string, string>}>}\n */\nexport default function request({\n\tmethod = \"GET\",\n\tendpoint,\n\tsessionKey,\n\tbody,\n\taddlHeaders = {},\n\thost = HOSTS.API,\n}: {\n\tmethod?: string,\n\tendpoint: string,\n\tsessionKey?: string,\n\tbody?: any,\n\taddlHeaders?: {[header: string]: string},\n\thost?: string,\n}) {\n\tconst headers: {[header: string]: string} = {\n\t\tAccept: \"application/json\",\n\t};\n\tif (method === \"POST\" || method === \"PUT\" || method === \"PATCH\") {\n\t\theaders[\"Content-Type\"] = \"application/json\";\n\t}\n\tif (sessionKey) {\n\t\theaders[\"x-mysolomeo-session-key\"] = sessionKey;\n\t}\n\tfor (const header in addlHeaders) {\n\t\theaders[header] = addlHeaders[header];\n\t}\n\n\tendpoint = Config.env[host] + endpoint;\n\n\tif (headers[\"Content-Type\"] === \"application/json\") body = JSON.stringify(body);\n\n\treturn new Promise((resolve, reject) => {\n\t\tConfig.httpImpl(method, endpoint, headers, body, (statusCode, resHeaders, resBody) => {\n\t\t\tconst contentType = resHeaders[\"Content-Type\"] || resHeaders[\"content-type\"] || \"\";\n\t\t\tif (resBody && contentType.indexOf(\"application/json\") !== -1) {\n\t\t\t\ttry {\n\t\t\t\t\tresBody = JSON.parse(resBody);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// resBody will remain as is\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (String(statusCode)[0] === \"2\" || String(statusCode)[0] === \"3\") {\n\t\t\t\tresolve({\n\t\t\t\t\tbody: resBody,\n\t\t\t\t\tstatusCode,\n\t\t\t\t\theaders: resHeaders,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet errorMessage;\n\t\t\t\tif (resBody) {\n\t\t\t\t\terrorMessage = resBody.message || JSON.stringify(resBody);\n\t\t\t\t}\n\t\t\t\tconst error = statusCode === 401\n\t\t\t\t\t? new DriveWealthSessionError(errorMessage, resBody, statusCode, resHeaders)\n\t\t\t\t\t: new DriveWealthError(errorMessage, resBody, statusCode, resHeaders);\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t});\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","/**\n * @namespace Config\n */\nexport const Config = {\n\tenv: null,\n\thttpImpl: null,\n\tappTypeID: null,\n\tappVersion: null,\n\twlpID: null,\n\tappsPartnerID: null,\n\treferralCode: null,\n};\n\n/**\n * Servers to send a request to\n * @name HOSTS\n * @property {string} API\n * @property {string} APPS\n * @property {string} REPORTS\n * @memberof Config\n * @constant\n */\nexport const HOSTS = {\n\tAPI: \"api\",\n\tAPPS: \"apps\",\n\tREPORTS: \"reports\",\n};\n\n/**\n * Servers to send a request to\n * @name ENVIRONMENTS\n * @property {object} UAT\n * @property {object} PROD\n * @memberof Config\n * @constant\n */\nexport const ENVIRONMENTS = {\n\tUAT: {\n\t\t[HOSTS.API]: \"http://api.drivewealth.io/v1\",\n\t\t[HOSTS.APPS]: \"http://apps.drivewealth.io\",\n\t\t[HOSTS.REPORTS]: \"http://reports.drivewealth.io\",\n\t},\n\tPROD: {\n\t\t[HOSTS.API]: \"https://api.drivewealth.net/v1\",\n\t\t[HOSTS.APPS]: \"https://apps.drivewealth.com\",\n\t\t[HOSTS.REPORTS]: \"https://reports.drivewealth.net\",\n\t},\n};\n\nexport function setup({\n\tenv,\n\thttpImpl,\n\tappTypeID,\n\tappVersion,\n\twlpID = \"DW\",\n\tappsPartnerID,\n\treferralCode,\n}) {\n\tConfig.env = env;\n\tConfig.httpImpl = httpImpl;\n\tConfig.appTypeID = appTypeID;\n\tConfig.appVersion = appVersion;\n\tConfig.wlpID = wlpID;\n\tConfig.appsPartnerID = appsPartnerID || wlpID;\n\tConfig.referralCode = referralCode;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.js","import ExtendableError from \"extendable-error-class\";\n\nexport class DriveWealthError extends ExtendableError {\n\tconstructor(message, body, statusCode, headers) {\n\t\tsuper(message);\n\t\tthis.body = body;\n\t\tthis.statusCode = statusCode;\n\t\tthis.headers = headers;\n\t}\n}\n\nexport class DriveWealthSessionError extends ExtendableError {\n\tconstructor(message, body, statusCode, headers) {\n\t\tsuper(message);\n\t\tthis.body = body;\n\t\tthis.statusCode = statusCode;\n\t\tthis.headers = headers;\n\t}\n}\n\nexport default {\n\tDriveWealthError,\n\tDriveWealthSessionError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Error.js","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ExtendableError).call(this, message));\n\n        _this.name = _this.constructor.name;\n        _this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\nmodule.exports = ExtendableError;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extendable-error-class/dist/index.es5.js\n// module id = 5\n// module chunks = 0","class Sessions {\n    constructor() {\n        this._keys = {};\n        this._mainUser = null;\n    }\n\n    save(userID, sessionKey) {\n        this._keys[userID] = sessionKey;\n        this._mainUser = userID;\n    }\n\n    get(userID) {\n        return this._keys[userID];\n    }\n\n    getAny() {\n        return this._keys[this._mainUser];\n    }\n\n    remove(userID) {\n        delete this._keys[userID];\n    }\n}\n\nexport const sessions = new Sessions();\nexport default sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sessions.js","/* @flow */\nimport request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport { DriveWealthError } from \"./Error\";\n\nimport type { CommissionSchedule } from \"./Account\";\nimport type Instrument from \"./Instrument\";\n\nconst SEC_FEE_RATE = 0.0000231;\nconst SEC_FEE_MIN = 0.01;\nconst SEC_FEE_MAX = Number.POSITIVE_INFINITY;\nconst TAF_FEE_RATE = 0.000119;\nconst TAF_FEE_MIN = 0.01;\nconst TAF_FEE_MAX = 5.95;\n\nexport type OrderParentDetails = {\n\taccountID: string,\n\taccountNo: string,\n\tuserID: string,\n\taccountType: string,\n};\nexport type NewOrder = {\n\tinstrument: Instrument | string,\n\tside: string,\n\tqty?: number,\n\tamountCash?: number,\n\tcomment?: string,\n\tautoStop?: number,\n\tprice?: number,\n};\nexport type NewCartOrder = {\n\tinstrument: Instrument | string,\n\tqty?: number,\n\tamountCash?: number,\n\treferenceID: string,\n\tcomment?: string,\n\tautoStop?: number,\n};\n\n/**\n * @class Order\n * @description An order created for an Account. Use the constructor if you have a flat JSON object that you would like to access instance methods on.\n * @param {object} data - See response at http://developer.drivewealth.com/docs/get_market\n */\nexport default class Order {\n\torderID: string;\n\taccountID: string;\n\tuserID: string;\n\tcumQty: number;\n\taccountNo: string;\n\tcomment: string;\n\tcommission: number;\n\tcreatedByID: string;\n\tcreatedWhen: string;\n\texecutedWhen: string;\n\tgrossTradeAmt: number;\n\tinstrumentID: string;\n\tleavesQty: string;\n\torderNo: string;\n\torderQty: number;\n\tside: string;\n\tautoStop: ?number;\n\tsymbol: string;\n\trejectionReason: ?string;\n\tstatus: string;\n\ttype: number;\n\tprice: ?number;\n\teffectivePrice: ?number;\n\n\tconstructor(data: Object) {\n\t\tObject.assign(this, data);\n\t\tthis.rejectionReason = data.ordRejReason;\n\t\tthis.status = data.ordStatus;\n\t\tthis.type = data.ordType || data.orderType;\n\t\tthis.price = data.stopPrice || data.limitPrice || data.price;\n\t}\n\n\t/**\n\t * @name SIDES\n\t * @memberof Order\n\t * @constant\n\t * @property {string} BUY\n\t * @property {string} SELL\n\t */\n\tstatic SIDES: {[side: string]: string} = {\n\t\tBUY: \"B\",\n\t\tSELL: \"S\",\n\t};\n\n\t/**\n\t * @name TYPES\n\t * @memberof Order\n\t * @constant\n\t * @property {string} MARKET\n\t * @property {string} LIMIT\n\t * @property {string} STOP\n\t */\n\tstatic TYPES: {[type: string]: string} = {\n\t\tMARKET: \"1\",\n\t\tLIMIT: \"2\",\n\t\tSTOP: \"3\",\n\t};\n\n\t/**\n\t * @name STATUSES\n\t * @memberof Order\n\t * @constant\n\t * @property {string} NEW\n\t * @property {string} PARTIAL_FILL\n\t * @property {string} FILL\n\t * @property {string} CANCELED\n\t * @property {string} REJECTED\n\t */\n\tstatic STATUSES: {[status: string]: string} = {\n\t\tNEW: \"0\",\n\t\tPARTIAL_FILL: \"1\",\n\t\tFILL: \"2\",\n\t\tCANCELED: \"4\",\n\t\tREJECTED: \"8\",\n\t};\n\n\t/**\n\t * @instance\n\t */\n\tcancel(): Promise<void> {\n\t\treturn Order.cancel(this.orderID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic cancel(orderID: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/orders/${orderID}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getByID(orderID: string): Promise<Order> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/orders/${orderID}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body, statusCode, headers }) => {\n\t\t\tif (body.ordRejReason !== undefined) {\n\t\t\t\treturn Promise.reject(\n\t\t\t\t\tnew DriveWealthError(body.ordRejReason, body, statusCode, headers),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn new Order(body);\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} type\n\t * @param {Object} parentInfo\n\t * @param {Object} options\n\t * @return If waitForFill is true, an Order will be returned. Otherwise, an orderID will be returned.\n\t */\n\tstatic create(\n\t\ttype: string,\n\t\t{\n\t\t\taccountID,\n\t\t\taccountNo,\n\t\t\tuserID,\n\t\t\taccountType,\n\t\t}: OrderParentDetails,\n\t\t{\n\t\t\torder: {\n\t\t\t\tinstrument,\n\t\t\t\tside,\n\t\t\t\tqty,\n\t\t\t\tamountCash,\n\t\t\t\tcomment,\n\t\t\t\tautoStop,\n\t\t\t\tprice,\n\t\t\t},\n\t\t\twaitForFill = true,\n\t\t\tfillRetryInterval = 1000,\n\t\t\tfillMaxRetries = 10,\n\t\t}: {\n\t\t\torder: NewOrder,\n\t\t\twaitForFill?: boolean,\n\t\t\tfillRetryInterval?: number,\n\t\t\tfillMaxRetries?: number,\n\t\t},\n\t): Promise<string | Order> {\n\t\tif (amountCash && qty) {\n\t\t\tthrow new Error(\"\\\"qty\\\" and \\\"amountCash\\\" are mutually exclusive.\");\n\t\t}\n\n\t\tif (type !== Order.TYPES.MARKET) {\n\t\t\tfillMaxRetries = 2;\n\n\t\t\tif (!price) {\n\t\t\t\tthrow new Error(\"Limit and stop orders require a \\\"price.\\\"\");\n\t\t\t}\n\n\t\t\tif (autoStop) {\n\t\t\t\tthrow new Error(\"\\\"autoStop\\\" is only allowed for market orders.\");\n\t\t\t}\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/orders\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\tinstrumentID: instrument.instrumentID || instrument.id || instrument,\n\t\t\t\taccountID,\n\t\t\t\taccountNo,\n\t\t\t\tuserID,\n\t\t\t\taccountType,\n\t\t\t\tordType: type,\n\t\t\t\tside,\n\t\t\t\torderQty: qty || undefined,\n\t\t\t\tamountCash: amountCash || undefined,\n\t\t\t\tcomment,\n\t\t\t\tautoStop,\n\t\t\t\tprice: type === Order.TYPES.STOP ? price : undefined,\n\t\t\t\tlimitPrice: type === Order.TYPES.LIMIT ? price : undefined,\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tif (!waitForFill) return body.orderID;\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tlet retries = fillMaxRetries;\n\t\t\t\tconst checkStatus = () => {\n\t\t\t\t\tretries -= 1;\n\t\t\t\t\tOrder.getByID(body.orderID).then(order => {\n\t\t\t\t\t\tconst isFilled = order.status !== Order.STATUSES.NEW &&\n\t\t\t\t\t\t\torder.status !== Order.STATUSES.PARTIAL_FILL;\n\n\t\t\t\t\t\tif (retries <= 0 || isFilled) {\n\t\t\t\t\t\t\treturn resolve(order);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t\t\t}, error => {\n\t\t\t\t\t\tif (error.body.code === 404 && retries > 0) {\n\t\t\t\t\t\t\treturn setTimeout(checkStatus, fillRetryInterval);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {Object} parentInfo\n\t * @param {Object} options\n\t * @return {Promise<Object.<string, Object>>} An object will be resolved with each key set to a referenceID passed with an order.\n\t */\n\tstatic createCart(\n\t\t{\n\t\t\taccountID,\n\t\t\taccountNo,\n\t\t\tuserID,\n\t\t\taccountType,\n\t\t}: OrderParentDetails,\n\t\t{\n\t\t\torders,\n\t\t\twaitForFill = true,\n\t\t\tfillRetryInterval = 500,\n\t\t\tfillMaxRetries = 10,\n\t\t}: {\n\t\t\torders: Array<NewCartOrder>,\n\t\t\twaitForFill?: boolean,\n\t\t\tfillRetryInterval?: number,\n\t\t\tfillMaxRetries?: number,\n\t\t},\n\t): Promise<{[referenceID: string]: Object}> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/orders\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: orders.map(order => ({\n\t\t\t\tinstrumentID: order.instrument.instrumentID\n\t\t\t\t\t|| order.instrument.id || order.instrument,\n\t\t\t\taccountID,\n\t\t\t\taccountNo,\n\t\t\t\tuserID,\n\t\t\t\taccountType,\n\t\t\t\tordType: Order.TYPES.MARKET,\n\t\t\t\tside: Order.SIDES.BUY,\n\t\t\t\torderQty: order.qty ? order.qty : undefined,\n\t\t\t\tamountCash: order.amountCash ? order.amountCash : undefined,\n\t\t\t\tcomment: order.comment,\n\t\t\t\tautoStop: order.autoStop,\n\t\t\t})),\n\t\t}).then(({ body }) => {\n\t\t\tlet orderResults = body;\n\t\t\tconst ordersMap = orderResults.reduce(\n\t\t\t\t(acc, next, idx) => Object.assign({}, acc, {\n\t\t\t\t\t[orders[idx].referenceID]: next,\n\t\t\t\t}),\n\t\t\t\t{},\n\t\t\t);\n\n\t\t\tif (!waitForFill) return ordersMap;\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tlet retries = fillMaxRetries;\n\t\t\t\torderResults = orderResults.map((order, idx) => Object.assign({}, order, {\n\t\t\t\t\treferenceID: orders[idx].referenceID,\n\t\t\t\t}));\n\t\t\t\tconst checkStatus = () => {\n\t\t\t\t\tif (retries <= 0) return resolve(ordersMap);\n\t\t\t\t\tretries -= 1;\n\n\t\t\t\t\tPromise.all(\n\t\t\t\t\t\torderResults.map(order => new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tOrder.getByID(order.orderID).then(orderCurrent => {\n\t\t\t\t\t\t\t\tordersMap[order.referenceID] = orderCurrent;\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t}, error => {\n\t\t\t\t\t\t\t\tif (error.body && error.body.ordRejReason) {\n\t\t\t\t\t\t\t\t\tordersMap[order.referenceID] = new Order(error.body);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})),\n\t\t\t\t\t).then(() => {\n\t\t\t\t\t\tlet shouldRetry = false;\n\t\t\t\t\t\tfor (const reference in ordersMap) {\n\t\t\t\t\t\t\tconst thisStatus = ordersMap[reference].ordStatus;\n\t\t\t\t\t\t\tif (!thisStatus\n\t\t\t\t\t\t\t\t|| thisStatus === Order.STATUSES.NEW\n\t\t\t\t\t\t\t\t|| thisStatus === Order.STATUSES.PARTIAL_FILL\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshouldRetry = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (shouldRetry) {\n\t\t\t\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn resolve(ordersMap);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic estimateCommission(\n\t\torders: Array<{\n\t\t\tside: string,\n\t\t\tqty: number,\n\t\t\tmarketPrice: number,\n\t\t\treferenceID: string,\n\t\t}>,\n\t\tcommissionSchedule: CommissionSchedule,\n\t): {\n\t\ttotal: number,\n\t\tmultipleOrderDelta: number,\n\t\tbyOrder: {[referenceID: string]: {\n\t\t\ttotal: number,\n\t\t\tcommission: number,\n\t\t\tfees: {\n\t\t\t\tsec: number,\n\t\t\t\ttaf: number,\n\t\t\t},\n\t\t}}\n\t} {\n\t\torders = Array.isArray(orders) ? orders : [orders];\n\t\tlet total = 0;\n\t\tlet totalFeesOnly = 0;\n\t\tlet basketPrice;\n\n\t\tconst { basketSchedule } = commissionSchedule;\n\t\tif (basketSchedule && basketSchedule.schedule) {\n\t\t\tfor (const scheduleItem of basketSchedule.schedule) {\n\t\t\t\tif (scheduleItem.basketSize === orders.length) {\n\t\t\t\t\tbasketPrice = scheduleItem.basketPrice;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst byOrder = {};\n\t\tfor (const order of orders) {\n\t\t\tconst { qty, marketPrice, side, referenceID } = order;\n\n\t\t\tlet orderPrice = qty < 1\n\t\t\t\t? commissionSchedule.fractionalRate\n\t\t\t\t: commissionSchedule.baseRate;\n\t\t\torderPrice += (\n\t\t\t\t{\n\t\t\t\t\tNEAREST: Math.round,\n\t\t\t\t\tCEIL: Math.ceil,\n\t\t\t\t\tFLOOR: Math.floor,\n\t\t\t\t}[commissionSchedule.shareAmountRounding](\n\t\t\t\t\tMath.max(0, qty - commissionSchedule.baseShares),\n\t\t\t\t) * commissionSchedule.excessRate\n\t\t\t);\n\n\t\t\tlet secFee = 0;\n\t\t\tlet tafFee = 0;\n\t\t\tif (commissionSchedule.passThroughFees && side === Order.SIDES.SELL) {\n\t\t\t\ttafFee = qty * marketPrice * TAF_FEE_RATE;\n\t\t\t\ttafFee = Math.min(TAF_FEE_MAX, tafFee);\n\t\t\t\ttafFee = Math.max(TAF_FEE_MIN, tafFee);\n\n\t\t\t\tif (qty >= 1) {\n\t\t\t\t\tsecFee = Math.floor(qty) * marketPrice * SEC_FEE_RATE;\n\t\t\t\t\tsecFee = Math.min(SEC_FEE_MAX, secFee);\n\t\t\t\t\tsecFee = Math.max(SEC_FEE_MIN, secFee);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst orderTotal = orderPrice + secFee + tafFee;\n\t\t\ttotal += orderTotal;\n\t\t\ttotalFeesOnly += secFee + tafFee;\n\n\t\t\tbyOrder[referenceID] = {\n\t\t\t\ttotal: orderTotal,\n\t\t\t\tcommission: orderPrice,\n\t\t\t\tfees: {\n\t\t\t\t\tsec: secFee,\n\t\t\t\t\ttaf: tafFee,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttotal: basketPrice ? (basketPrice + totalFeesOnly) : total,\n\t\t\tmultipleOrderDelta: basketPrice ? (basketPrice - total) : 0,\n\t\t\tbyOrder,\n\t\t};\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Order.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport { Config, HOSTS } from \"./Config\";\n\n/**\n * @class Funding\n * @description Static class for retrieving funding information.\n */\nexport default class Funding {\n\t/**\n\t * @name ALLOWED_TYPES\n\t * @memberof Funding\n\t * @constant\n\t * @property {string} DEPOSIT\n\t * @property {string} WITHDRAW\n\t * @property {string} DEPOSIT_AND_WITHDRAW\n\t */\n\tstatic ALLOWED_TYPES = {\n\t\tDEPOSIT: \"DEPOSIT\",\n\t\tWITHDRAW: \"WITHDRAW\",\n\t\tDEPOSIT_AND_WITHDRAW: \"DEPOSIT_AND_WITHDRAW\",\n\t};\n\n\t/**\n\t * @name DEPOSIT_FREQUENCIES\n\t * @memberof Funding\n\t * @constant\n\t * @property {string} BIWEEKLY\n\t * @property {string} MONTHLY_FIRST\n\t * @property {string} MONTHLY_MIDDLE\n\t * @property {string} QUARTERLY\n\t */\n\tstatic DEPOSIT_FREQUENCIES = {\n\t\tBIWEEKLY: \"BIWEEKLY\",\n\t\tMONTHLY_FIRST: \"MONTHLY_FIRST\",\n\t\tMONTHLY_MIDDLE: \"MONTHLY_MIDDLE\",\n\t\tQUARTERLY: \"QUARTERLY\",\n\t};\n\n\t/**\n\t * @param {object} options\n\t */\n\tstatic getFundingMethods({\n\t\tuserID,\n\t\taccountID,\n\t\tlanguage,\n\t\tminAmount,\n\t\tmaxAmount,\n\t\tamount,\n\t\tfilters = {},\n\t}: {\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tlanguage?: string,\n\t\tminAmount?: number,\n\t\tmaxAmount?: number,\n\t\tamount?: number,\n\t\tfilters?: {\n\t\t\tname: string,\n\t\t\tcurrency: string,\n\t\t\tcountry: string,\n\t\t\tallowed: string,\n\t\t},\n\t} = {}): Promise<Array<Object>> {\n\t\tif (amount && (minAmount || maxAmount)) {\n\t\t\tthrow new Error(`\"amount\" is not compatible with \"minAmount\" or \"maxAmount.\"`);\n\t\t}\n\n\t\tlet queryString = `partner=${Config.appsPartnerID}&userID=${userID}&accountID=${accountID}`;\n\t\tif (language) queryString += `&language=${language}`;\n\t\tif (minAmount) queryString += `&minAmount=${minAmount}`;\n\t\tif (maxAmount) queryString += `&maxAmount=${maxAmount}`;\n\t\tif (amount) queryString += `&amount=${amount}`;\n\t\tif (filters.name) queryString += `&filter[name]=${filters.name}`;\n\t\tif (filters.country) queryString += `&filter[country]=${filters.country}`;\n\t\tif (filters.currency) queryString += `&filter[currency]=${filters.currency}`;\n\t\tif (filters.allowed) queryString += `&filter[allowed]=${filters.allowed}`;\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\thost: HOSTS.APPS,\n\t\t\tendpoint: `/funding/methods?${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getPastDeposits(userID: string) {\n\t\treturn request({\n\t\t\tendpoint: \"/funding/status\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.data);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getSubscriptionPlans(userID: string) {\n\t\treturn request({\n\t\t\tendpoint: \"/funding/ach/subscription-plans\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => {\n\t\t\tconst pricing = [].concat(body.data)\n\t\t\t\t.sort((x, y) => x.amount - y.amount)\n\t\t\t\t.map(price => Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\tprice,\n\t\t\t\t\t{ amount: Number(price.amount / 100) },\n\t\t\t\t));\n\n\t\t\treturn pricing;\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getRecurringDeposit(id: string) {\n\t\treturn request({\n\t\t\tendpoint: `/funding/ach/recurring-deposits/${id}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getRecurringDepositsForUser(userID: string) {\n\t\treturn request({\n\t\t\tendpoint: `/users/${userID}/recurring-deposits`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getRecurringDepositsForAccount(userID: string, accountID: string) {\n\t\treturn request({\n\t\t\tendpoint: `/users/${userID}/accounts/${accountID}/recurring-deposits`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic updateRecurringDeposit(depositID: string, data: Object): Promise<Object> {\n\t\treturn request({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint: `/funding/ach/recurring-deposits/${depositID}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t\tbody: data,\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic deleteRecurringDeposit(depositID: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/funding/ach/recurring-deposits/${depositID}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(() => undefined);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Funding.js","/* @flow */\nimport request from \"./request\";\nimport { Config, HOSTS } from \"./Config\";\nimport Sessions from \"./Sessions\";\n\n/**\n * @class Reports\n * @description Static class for retrieving account reports.\n */\nexport default class Reports {\n\t/**\n\t * @static\n\t */\n\tstatic getTransactions(\n\t\tuserID: string,\n\t\taccountNo: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?sessionKey=${Sessions.get(userID)}`\n\t\t\t+ \"&ReportName=FinTrans\"\n\t\t\t+ \"&ReportFormat=JSON\"\n\t\t\t+ `&AccountNumber=${accountNo}`\n\t\t\t+ `&DateStart=${startDate.toISOString()}`\n\t\t\t+ `&DateEnd=${endDate.toISOString()}`\n\t\t\t+ `&wlpID=${Config.wlpID}`\n\t\t\t+ \"&LanguageID=en_US\";\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\thost: HOSTS.REPORTS,\n\t\t\tendpoint: `/DriveWealth${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {},\n\t\t}).then(({ body }) => body.transaction || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getPlacedOrders(\n\t\tuserID: string,\n\t\taccountNo: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?sessionKey=${Sessions.get(userID)}`\n\t\t\t+ \"&ReportName=OrderTrans\"\n\t\t\t+ \"&ReportFormat=JSON\"\n\t\t\t+ `&AccountNumber=${accountNo}`\n\t\t\t+ `&DateStart=${startDate.toISOString()}`\n\t\t\t+ `&DateEnd=${endDate.toISOString()}`\n\t\t\t+ `&wlpID=${Config.wlpID}`\n\t\t\t+ \"&LanguageID=en_US\";\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\thost: HOSTS.REPORTS,\n\t\t\tendpoint: `/DriveWealth${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {},\n\t\t}).then(({ body }) => body.transaction || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getStatements(\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?accountID=${accountID}`\n\t\t\t+ `&startDate=${startDate.toISOString()}`\n\t\t\t+ `&endDate=${endDate.toISOString()}`\n\t\t\t+ \"&type=02\";\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/statements${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getTradeConfirms(\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?accountID=${accountID}`\n\t\t\t+ `&startDate=${startDate.toISOString()}`\n\t\t\t+ `&endDate=${endDate.toISOString()}`\n\t\t\t+ \"&type=01\";\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/statements${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getTaxDocuments(\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?accountID=${accountID}`\n\t\t\t+ `&startDate=${startDate.toISOString()}`\n\t\t\t+ `&endDate=${endDate.toISOString()}`\n\t\t\t+ \"&type=03\";\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/statements${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic generateDownloadURL(\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tfileKey: string,\n\t): Promise<string> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/statements/${accountID}/${fileKey}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.url);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getSupportedCountries() {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: \"/countries\",\n\t\t}).then(({ body }) => body || []);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Reports.js","/* @flow */\nimport request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport type Quote = {\n\tbid: number,\n\task: number,\n};\n\n/**\n * @class Instrument\n * @description Use the constructor if you have a flat JSON object that you would like to access instance methods on.\n * @param {object} data - See response at http://developer.drivewealth.com/docs/get_instrument\n */\nexport default class Instrument {\n\tinstrumentID: string;\n\tname: string;\n\texchangeID: string;\n\tinstrumentTypeID: string;\n\torderSizeMax: number;\n\torderSizeMin: number;\n\torderSizeStep: number;\n\trateAsk: number;\n\trateBid: number;\n\tratePrecision: number;\n\tsymbol: string;\n\ttradeStatus: string;\n\turlImage: string;\n\turlInvestor: string;\n\tchaikinPgr: string;\n\tpriorClose: number;\n\tmarketState: number;\n\tfundamentalDataModel: Object;\n\n\tconstructor(data: Object) {\n\t\tObject.assign(this, data);\n\t}\n\n\t/**\n\t * @name TRADE_STATUSES\n\t * @memberof Instrument\n\t * @constant\n\t * @property {string} INACTIVE\n\t * @property {string} ACTIVE\n\t * @property {string} CLOSED\n\t */\n\tstatic TRADE_STATUSES: {[status: string]: string} = {\n\t\tINACTIVE: \"0\",\n\t\tACTIVE: \"1\",\n\t\tCLOSED: \"2\",\n\t};\n\n\t/**\n\t * @name CHART_COMPRESSIONS\n\t * @memberof Instrument\n\t * @constant\n\t * @property {number} DAY\n\t * @property {number} MINUTE_1\n\t * @property {number} MINUTE_5\n\t * @property {number} MINUTE_30\n\t * @property {number} HOUR\n\t * @property {number} WEEK\n\t */\n\tstatic CHART_COMPRESSIONS: {[status: string]: number} = {\n\t\tDAY: 0,\n\t\tMINUTE_1: 1,\n\t\tMINUTE_5: 4,\n\t\tMINUTE_30: 8,\n\t\tHOUR: 9,\n\t\tWEEK: 10,\n\t};\n\n\t/**\n\t * @static\n\t */\n\tstatic getBySymbol(symbol: Array<string> | string): Promise<Array<Instrument> | Instrument> {\n\t\tconst symbols = typeof symbol === \"string\" ? [symbol] : symbol;\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/instruments?symbols=${symbols.join(\",\")}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => {\n\t\t\tbody = body.map(instrument => new Instrument(instrument));\n\t\t\treturn typeof symbol === \"string\" ? body[0] : body;\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getByID(id: string, includeFundamentals: boolean = true): Promise<Instrument> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/instruments/${id}${includeFundamentals ? \"?options=F\" : \"\"}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => new Instrument(body));\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getAll(tradeStatus?: string = \"-1\"): Promise<Array<Instrument>> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/instruments?tradeStatus=${tradeStatus}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => body.map(instrument => new Instrument(instrument)));\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic search(criteria: { name?: string, symbol?: string }): Promise<Array<Instrument>> {\n\t\tlet queryString = \"?\";\n\t\tif (criteria.symbol) queryString += `symbol=${criteria.symbol}&`;\n\t\tif (criteria.name) queryString += `name=${criteria.name}&`;\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/instruments${queryString}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => body.map(instrument => new Instrument(instrument)));\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetQuote(): Promise<Quote> {\n\t\treturn Instrument.getQuote(this.symbol);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getQuote(\n\t\tsymbol: string | Instrument | Array<string | Instrument>,\n\t// $FlowFixMe\n\t): Promise<Quote | {[symbol: string]: Quote}> {\n\t\tconst symbols: Array<string> = (Array.isArray(symbol) ? symbol : [symbol])\n\t\t\t.map(sym => sym instanceof Instrument ? sym.symbol : sym);\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/quotes?symbols=${symbols.join(\",\")}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t\taddlHeaders: {\n\t\t\t\tAccept: \"text/plain\",\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tlet obj = {};\n\t\t\tbody = body.split(\"|\").slice(10);\n\t\t\tfor (const rawQuote of body) {\n\t\t\t\tconst parsedQuote = rawQuote.split(\",\");\n\t\t\t\tobj[parsedQuote[0]] = {\n\t\t\t\t\tbid: Number(parsedQuote[1]),\n\t\t\t\t\task: Number(parsedQuote[2]),\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!Array.isArray(symbol)) obj = obj[symbols[0]];\n\t\t\treturn obj;\n\t\t});\n\t}\n\n\t/**\n\t * @param {date} dateStart\n\t * @param {date} dateEnd\n\t */\n\t/**\n\t * @param {number} tradingDays\n\t */\n\tgetChartData(compression: number) {\n\t\tif (arguments.length === 3) {\n\t\t\treturn Instrument.getChartData(\n\t\t\t\tthis.instrumentID,\n\t\t\t\tcompression,\n\t\t\t\targuments[1],\n\t\t\t\targuments[2],\n\t\t\t);\n\t\t}\n\t\treturn Instrument.getChartData(this.instrumentID, compression, arguments[1]);\n\t}\n\n\t/**\n\t * @param {date} dateStart\n\t * @param {date} dateEnd\n\t */\n\t/**\n\t * @param {number} tradingDays\n\t */\n\tstatic getChartData(instrumentID: string, compression: number): Promise<Array<string>> {\n\t\tlet timeParams;\n\t\tif (arguments.length === 4) {\n\t\t\tconst dateStart = arguments[2].toISOString().replace(/\\.\\d{3}/, \"\");\n\t\t\tconst dateEnd = arguments[3].toISOString().replace(/\\.\\d{3}/, \"\");\n\t\t\ttimeParams = `dateStart=${dateStart}&dateEnd=${dateEnd}`;\n\t\t} else {\n\t\t\ttimeParams = `tradingDays=${arguments[2]}`;\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/bars?instrumentID=${instrumentID}&compression=${compression}&${timeParams}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => body.data.split(\"|\"));\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js","/* @flow */\nimport request from \"./request\";\nimport { Config } from \"./Config\";\nimport Sessions from \"./Sessions\";\nimport Account from \"./Account\";\n\n/**\n * @class User\n * @description A user object. Use the constructor if you have a flat JSON object that you would like to access instance methods on.\n * @param {object} data - See response at {@link http://developer.drivewealth.com/docs/get-user}\n */\nclass User {\n\tcountryID: string;\n\temailAddress: string;\n\tfirstName: string;\n\tlanguageID: string;\n\tlastName: string;\n\tphoneNumber: string;\n\treferralCode: string;\n\tuserID: string;\n\tusername: string;\n\twlpID: string;\n\tstatus: string;\n\tusCitizen: boolean;\n\tlastLoginWhen: string;\n\tcitizenship: string;\n\taddressLine1: string;\n\taddressLine2: string;\n\tcity: string;\n\tstateProvince: string;\n\tzipPostalCode: string;\n\tfullName: string;\n\n\tconstructor(data: Object) {\n\t\tObject.assign(this, data);\n\t\tthis.fullName = data.firstName + \" \" + data.lastName;\n\t}\n\n\t/**\n\t * @name STATUSES\n\t * @property {Number} PENDING\n\t * @property {Number} APPROVED\n\t * @property {Number} REJECTED\n\t * @property {Number} REVOKED\n\t * @property {Number} CLOSED\n\t * @memberof User\n\t * @constant\n\t */\n\tstatic STATUSES: {[status: string]: number} = {\n\t\tPENDING: 1,\n\t\tAPPROVED: 2,\n\t\tREJECTED: 3,\n\t\tREVOKED: 4,\n\t\tCLOSED: 5,\n\t};\n\n\t/**\n\t * @name DOCUMENT_TYPES\n\t * @property {string} PHOTO_ID\n\t * @property {string} PROOF_OF_ADDRESS\n\t * @property {string} PHOTO_ID_WITH_PROOF_OF_ADDRESS\n\t * @memberof User\n\t * @constant\n\t */\n\tstatic DOCUMENT_TYPES: {[type: string]: string} = {\n\t\tPHOTO_ID: \"Picture ID\",\n\t\tPROOF_OF_ADDRESS: \"Proof of address\",\n\t\tPHOTO_ID_WITH_PROOF_OF_ADDRESS: \"Picture ID_Proof of address\",\n\t};\n\n\t/**\n\t * @static\n\t */\n\tstatic getAccounts(userID: string): Promise<Array<Account>> {\n\t\treturn Account.getListForUserID(userID);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetAccounts(): Promise<Array<Account>> {\n\t\treturn Account.getListForUserID(this.userID);\n\t}\n\n\t/**\n\t * Get all settings\n\t * @param  {string} userID\n\t * @return {Promise<Object.<string, string>>}\n\t */\n\t/**\n\t * Get setting value by key\n\t * @param  {string} userID\n\t * @param  {string} key\n\t * @return {Promise<string>}\n\t */\n\tstatic getSettings(userID: string, key?: string) {\n\t\tif (!key) {\n\t\t\treturn request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tendpoint: `/users/${userID}/settings`,\n\t\t\t\tsessionKey: Sessions.get(userID),\n\t\t\t}).then(({ body }) => {\n\t\t\t\tconst formattedData = {};\n\t\t\t\tfor (const setting of body) {\n\t\t\t\t\tformattedData[setting.key] = setting.value;\n\t\t\t\t}\n\t\t\t\treturn formattedData;\n\t\t\t});\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/settings/${key}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.value);\n\t}\n\n\t/**\n\t * Get all settings\n\t * @return {Promise<Object.<string, string>>}\n\t */\n\t/**\n\t * Get setting value\n\t * @param  {string} key\n\t * @return {Promise<string>}\n\t */\n\tgetSettings(key?: string) {\n\t\treturn User.getSettings(this.userID, key);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic setSetting(userID: string, key: string, value: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: `/users/${userID}/settings`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\tkey, value,\n\t\t\t},\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tsetSetting(key: string, value: string): Promise<void> {\n\t\treturn User.setSetting(this.userID, key, value);\n\t}\n\n\tstatic unsetSetting(userID: string, key: string) : Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/users/${userID}/settings/${key}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tunsetSetting(key: string): Promise<void> {\n\t\treturn User.unsetSetting(this.userID, key);\n\t}\n\n\t/**\n\t * @description See response at {@link http://developer.drivewealth.com/docs/user-status}\n\t */\n\tgetStatus(): Promise<Object> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${this.userID}/status`,\n\t\t\tsessionKey: Sessions.get(this.userID),\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t *  @static\n\t */\n\tstatic logout(userID: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/userSessions/${Sessions.get(userID)}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(() => {\n\t\t\tSessions.remove(userID);\n\t\t});\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tlogout(): Promise<void> {\n\t\treturn User.logout(this.userID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getByUserID(userID: string): Promise<User> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => new User(body));\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tget(): Promise<User> {\n\t\treturn User.getByUserID(this.userID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic login(username: string, password: string): Promise<User> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/userSessions\",\n\t\t\tbody: {\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tappTypeID: Config.appTypeID,\n\t\t\t\tappVersion: Config.appVersion,\n\t\t\t\tlanguageID: \"en_US\",\n\t\t\t\tosType: \"unknown\",\n\t\t\t\tosVersion: \"unknown\",\n\t\t\t\tscrRes: \"unknown\",\n\t\t\t\tipAddress: \"unknown\",\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tSessions.save(body.userID, body.sessionKey);\n\t\t\treturn User.getByUserID(body.userID);\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic isUsernameAvailable(username: string): Promise<boolean> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users?username=${username}`,\n\t\t}).then(\n\t\t\t() => false,\n\t\t\t(rejection) => rejection.statusCode === 404\n\t\t\t\t? true\n\t\t\t\t: Promise.reject(rejection),\n\t\t);\n\t}\n\n\t/**\n\t * @param {object} data\n\t * @param {boolean} loginAutomatically - If false, no session will be created.\n\t * @return {Promise<undefined | User>} If loginAutomatically is true, a User will be resolved.\n\t */\n\tstatic create({\n\t\tusername,\n\t\tpassword,\n\t\tfirstName,\n\t\tlastName,\n\t\temail,\n\t\tlanguageID,\n\t\treferralCode = Config.referralCode,\n\t\tutmCampaign,\n\t\tutmContent,\n\t\tutmMedium,\n\t\tutmSource,\n\t\tutmTerm,\n\t}, loginAutomatically: boolean = true): Promise<void | User> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/signups/live\",\n\t\t\tbody: {\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\temailAddress1: email,\n\t\t\t\tlanguageID,\n\t\t\t\twlpID: Config.wlpID,\n\t\t\t\treferralCode,\n\t\t\t\tutmCampaign,\n\t\t\t\tutmContent,\n\t\t\t\tutmMedium,\n\t\t\t\tutmSource,\n\t\t\t\tutmTerm,\n\t\t\t},\n\t\t}).then(() => {\n\t\t\tif (loginAutomatically) {\n\t\t\t\treturn User.login(username, password);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @param {object} data\n\t */\n\tstatic update({\n\t\tuserID,\n\t\taddressLine1,\n\t\taddressLine2,\n\t\tcity,\n\t\tcountryID,\n\t\temail,\n\t\tfirstName,\n\t\tlastName,\n\t\tlanguageID,\n\t\tphoneHome,\n\t\tphoneWork,\n\t\tphone,\n\t\tstateProvince,\n\t\tzipPostalCode,\n\t}): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"PUT\",\n\t\t\tendpoint: `/users/${userID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\taddressLine1,\n\t\t\t\taddressLine2,\n\t\t\t\tcity,\n\t\t\t\tcountryID,\n\t\t\t\temailAddress1: email,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\tlanguageID,\n\t\t\t\tphoneHome,\n\t\t\t\tphoneWork,\n\t\t\t\tphoneMobile: phone,\n\t\t\t\tstateProvince,\n\t\t\t\tzipPostalCode,\n\t\t\t},\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tupdate(data: Object): Promise<void> {\n\t\treturn User.update(Object.assign({}, data, {\n\t\t\tuserID: this.userID,\n\t\t\temail: data.email || this.emailAddress,\n\t\t}));\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic uploadDocument(userID: string, file: File, type: string): Promise<void> {\n\t\t// The following line is for eslint\n\t\t/* global FormData */\n\t\tconst body = new FormData();\n\t\tbody.append(\"token\", userID);\n\t\tbody.append(\"documentType\", type);\n\t\tbody.append(\"documentImage\", file);\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/documents\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\taddlHeaders: {\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t\t},\n\t\t\tbody,\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tuploadDocument(file: File, type: string): Promise<void> {\n\t\treturn User.uploadDocument(this.userID, file, type);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetCreditCards(): Promise<Array<Object>> {\n\t\treturn User.getCreditCards(this.userID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getCreditCards(userID: string): Promise<Array<Object>> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/credit-cards`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\taddCreditCard(cardToken: string): Promise<Object> {\n\t\treturn User.addCreditCard(this.userID, cardToken);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic addCreditCard(userID: string, cardToken: string): Promise<Object> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: `/users/${userID}/credit-cards`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: { cardToken },\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tremoveCreditCard(cardID: string): Promise<void> {\n\t\treturn User.removeCreditCard(this.userID, cardID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic removeCreditCard(userID: string, cardID: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/users/${userID}/credit-cards/${cardID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic forgotPassword(username: string): Promise<string> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/users/passwords\",\n\t\t\tbody: {\n\t\t\t\tusername,\n\t\t\t},\n\t\t}).then(({ body }) => body.passwordResetID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic resetPassword(passwordResetID: string, code: string, password: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"PUT\",\n\t\t\tendpoint: `/users/passwords/${passwordResetID}`,\n\t\t\tbody: {\n\t\t\t\tcode,\n\t\t\t\tpasswordResetID,\n\t\t\t\tpassword,\n\t\t\t},\n\t\t});\n\t}\n}\n\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/User.js"]}